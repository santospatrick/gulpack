:root {
    /* Colors */
    /* Grays */
    /* Spaces */
    /* Sizes */
    /* Fonts */
    /* Weights */
    /* Lines */
    /* Letter Spacing */
    /* Radius */
    /* Transitions */
    /* Shadows */
}
html {
    font-family: sans-serif;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%
}
body {
    margin: 0
}
html,
body {
    height: 100%
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
    display: block
}
audio,
canvas,
progress,
video {
    display: inline-block
}
a:hover,
a:focus,
a:active,
a.active {
    outline-width: 0
}
img {
    max-width: 100%;
    border-style: none
}
h1 {
    font-size: 2em
}
h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 20px 0
}
small {
    font-size: 80%
}
hr {
    display: block;
    border: 0;
    border-top: 1px solid #ececec;
    margin: 1em 0;
    padding: 0
}
p {
    margin-top: 0
}
@font-face {
    font-family: 'roboto', sans-serif;
    src: url("url(../fonts/Roboto-Regular-webfont.eot).eot");
    src: url("url(../fonts/Roboto-Regular-webfont.eot).eot?#iefix") format('embedded-opentype'),
       url("url(../fonts/Roboto-Regular-webfont.eot).woff") format('woff'),
       url("url(../fonts/Roboto-Regular-webfont.eot).ttf") format('truetype'),
       url("url(../fonts/Roboto-Regular-webfont.eot).svg") format('svg');
    font-weight: 400;
    font-style: normal
}
@font-face {
    font-family: 'roboto', sans-serif;
    src: url("url(../fonts/Roboto-Light-webfont.eot).eot");
    src: url("url(../fonts/Roboto-Light-webfont.eot).eot?#iefix") format('embedded-opentype'),
       url("url(../fonts/Roboto-Light-webfont.eot).woff") format('woff'),
       url("url(../fonts/Roboto-Light-webfont.eot).ttf") format('truetype'),
       url("url(../fonts/Roboto-Light-webfont.eot).svg") format('svg');
    font-weight: 200;
    font-style: normal
}
@font-face {
    font-family: 'roboto', sans-serif;
    src: url("url(../fonts/Roboto-Medium-webfont.eot).eot");
    src: url("url(../fonts/Roboto-Medium-webfont.eot).eot?#iefix") format('embedded-opentype'),
       url("url(../fonts/Roboto-Medium-webfont.eot).woff") format('woff'),
       url("url(../fonts/Roboto-Medium-webfont.eot).ttf") format('truetype'),
       url("url(../fonts/Roboto-Medium-webfont.eot).svg") format('svg');
    font-weight: 700;
    font-style: normal
}
@font-face {
    font-family: 'icomoon';
    src: url("url(../fonts/icomoon.eot?p6w75j).eot");
    src: url("url(../fonts/icomoon.eot?p6w75j).eot?#iefix") format('embedded-opentype'),
       url("url(../fonts/icomoon.eot?p6w75j).woff") format('woff'),
       url("url(../fonts/icomoon.eot?p6w75j).ttf") format('truetype'),
       url("url(../fonts/icomoon.eot?p6w75j).svg") format('svg');
    font-weight: normal;
    font-style: normal
}
html,
body {
    font-family: 'roboto', sans-serif;
    font-weight: 400
}
p {
    margin-bottom: 20px
}
hr {
    background-color: #ececec
}
a {
    text-decoration: none;
    color: rgba(33, 150, 243, 1);
    transition: all .25s ease-out
}
a:hover,
a:focus,
a:active,
a.active {
    color: rgb(10, 111, 194)
}
input[type='text'],
textarea,
select {
    display: block;
    box-sizing: border-box;
    width: 100%;
    height: 40px;
    font-family: 'roboto', sans-serif;
    outline: 0;
    margin-bottom: 20px
}
input[type='text'],
textarea,
select,
input[type='text'] + label,
textarea + label,
select + label,
input[type='text'] ~ i,
textarea ~ i,
select ~ i {
    transition: all .25s ease-out
}
form a.btn,
form button,
form input[type=submit] {
    float: right
}
input[type='text']:required:invalid + label,
textarea:required:invalid + label,
select:required:invalid + label,
input[type='text']:required:invalid ~ i,
textarea:required:invalid ~ i,
select:required:invalid ~ i {
    border-color: rgba(244, 67, 54, 1);
    color: rgba(244, 67, 54, 1)
}
input[type='text']:required:invalid,
textarea:required:invalid,
select:required:invalid,
input[type='text']:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
    border-color: rgba(244, 67, 54, 1)
}
input[type='text']:required:invalid,
textarea:required:invalid,
select:required:invalid,
input[type='text']:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
    color: #000
}
input[type='text']:focus:invalid + label,
textarea:focus:invalid + label,
select:focus:invalid + label,
input[type='text']:focus:invalid ~ i,
textarea:focus:invalid ~ i,
select:focus:invalid ~ i {
    border-color: rgba(244, 67, 54, 1);
    color: rgba(244, 67, 54, 1)
}
input[type='text']:required:valid,
textarea:required:valid,
select:required:valid,
input[type='text']:required:valid + label,
textarea:required:valid + label,
select:required:valid + label,
input[type='text']:required:valid ~ i,
textarea:required:valid ~ i,
select:required:valid ~ i {
    border-color: rgba(76, 175, 80, 1)
}
input[type='text']:focus:valid + label,
textarea:focus:valid + label,
select:focus:valid + label,
input[type='text']:focus:valid ~ i,
textarea:focus:valid ~ i,
select:focus:valid ~ i {
    border-color: rgba(76, 175, 80, 1);
    color: rgba(76, 175, 80, 1)
}
input[type='text']:focus + label,
textarea:focus + label,
select:focus + label,
input[type='text']:focus ~ i,
textarea:focus ~ i,
select:focus ~ i {
    color: rgba(33, 150, 243, 1)
}
table {
    table-layout: auto;
    width: 100%;
    max-width: 100%;
    border-collapse: collapse;
    border-spacing: 0;
    font-size: .8em
}
table thead th {
    border-bottom: 2px solid #bdbdbd;
    text-align: left;
    font-weight: 700
}
table td {
    border-bottom: 1px solid #bdbdbd
}
table td,
table th {
    padding: 10px
}
table a {
    text-decoration: none;
    color: #616161
}
@media (max-width: 543px) {
    table thead {
        display: none
    }
    table td {
        position: relative;
        display: block
    }
    table a {
        display: inline-block;
        max-width: 50%
    }
    table td:before {
        content: attr(data-th);
        float: left;
        width: 50%;
        font-weight: 700
    }
}
/*
@styleguide
 
## Pallete
 
Use this names as a **suffix** of the **components** to get the colors.

<div style="text-align:center">
  <div class="palette-primary"><small>-primary</small></div>
  <div class="palette-secundary"><small>-secundary</small></div>
  <div class="palette-tertiary"><small>-tertiary</small></div>
  <div class="palette-quaternary"><small>-quaternary</small></div>
</div>

*/
[class^='palette-'],
[class*=' palette-'] {
    display: inline-block;
    width: calc(33% - 25px);
    margin-right: 8.33333px;
    margin-bottom: 20px;
    box-sizing: border-box;
    padding-top: 150px;
    border-radius: 2px;
    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12);
    overflow: hidden
}
[class^='palette-'] small,
[class*=' palette-'] small {
    display: block;
    width: 100%;
    box-sizing: border-box;
    padding: 10px 0;
    background-color: #fff;
    text-align: center
}
/* Defaults */
.palette-primary {
    background-color: rgba(33, 150, 243, 1)
}
.palette-secundary {
    background-color: rgba(244, 67, 54, 1)
}
.palette-tertiary {
    background-color: rgba(255, 193, 7, 1)
}
.palette-quaternary {
    background-color: rgba(76, 175, 80, 1)
}
/*
@styleguide
 
## Buttons
 
Use the button classes on an `<a>`, `<button>`, `<input>` element.
 
<button class="btn-primary">Button</button>
<button class="btn-secundary">Button</button>
<button class="btn-tertiary">Button</button>
<button class="btn-quaternary">Button</button>
 
    <button class="btn-primary">Button</button>
    <button class="btn-secundary">Button</button>
    <button class="btn-tertiary">Button</button>
    <button class="btn-quaternary">Button</button>
 
*/
a.btn,
button,
input[type=submit] {
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    height: 36px;
    width: auto;
    border: 0;
    outline-width: 0;
    padding: 0 40px;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12);
    letter-spacing: .5px;
    background-color: #ececec;
    text-transform: uppercase;
    vertical-align: middle;
    cursor: pointer;
    overflow: hidden;
    transition: all .25s ease-out;
    text-align: center;
    border-radius: 2px;
    color: #fff
}
a.btn:hover,
button:hover,
input[type=submit]:hover,
a.btn:focus,
button:focus,
input[type=submit]:focus,
a.btn:active,
button:active,
input[type=submit]:active,
a.btn.active,
button.active,
input[type=submit].active {
    box-shadow: 0 5px 11px 0 rgba(0,0,0,0.18),0 4px 15px 0 rgba(0,0,0,0.15)
}
.btn-primary {
    background-color: rgba(33, 150, 243, 1)
}
.btn-secundary {
    background-color: rgba(244, 67, 54, 1)
}
.btn-tertiary {
    background-color: rgba(255, 193, 7, 1)
}
.btn-quaternary {
    background-color: rgba(76, 175, 80, 1)
}
i[class^='icon-'],
i[class*=' icon-'] {
    font-family: 'icomoon';
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale
}
/* https://icomoon.io/app/ */
[class^='grid-'],
[class*=' grid-'] {
    *zoom: 1
}
[class^='grid-']:before,
[class*=' grid-']:before {
    content: '';
    display: table
}
[class^='grid-']:after,
[class*=' grid-']:after {
    content: '';
    display: table;
    clear: both
}
[class^='grid-'] .grid-item,
[class*=' grid-'] .grid-item {
    box-sizing: border-box
}
@media (min-width: 768px) {
    /* Basic */
    .grid-2 .grid-item {
        width: calc(99.99% * 1/2 - (20px - 20px * 1/2))
    }
    .grid-2 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-2 .grid-item:last-child {
        margin-right: 0
    }
    .grid-2 .grid-item:nth-child(2n) {
        margin-right: 0;
        float: right
    }
    .grid-2 .grid-item:nth-child(2n + 1) {
        clear: left
    }
    .grid-3 .grid-item {
        width: calc(99.99% * 1/3 - (20px - 20px * 1/3))
    }
    .grid-3 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-3 .grid-item:last-child {
        margin-right: 0
    }
    .grid-3 .grid-item:nth-child(3n) {
        margin-right: 0;
        float: right
    }
    .grid-3 .grid-item:nth-child(3n + 1) {
        clear: left
    }
    .grid-4 .grid-item {
        width: calc(99.99% * 1/4 - (20px - 20px * 1/4))
    }
    .grid-4 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-4 .grid-item:last-child {
        margin-right: 0
    }
    .grid-4 .grid-item:nth-child(4n) {
        margin-right: 0;
        float: right
    }
    .grid-4 .grid-item:nth-child(4n + 1) {
        clear: left
    }
    /* Offset */
    .grid-2 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/2 - (20px - 20px * 1/2) + 20px)
    }
    .grid-3 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/3 - (20px - 20px * 1/3) + 20px)
    }
    .grid-3 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/3 - (20px - 20px * 2/3) + 20px)
    }
    .grid-4 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/4 - (20px - 20px * 1/4) + 20px)
    }
    .grid-4 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/4 - (20px - 20px * 2/4) + 20px)
    }
    .grid-4 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/4 - (20px - 20px * 3/4) + 20px)
    }
}
@media (min-width: 992px) {
    /* Basic */
    .grid-5 .grid-item {
        width: calc(99.99% * 1/5 - (20px - 20px * 1/5))
    }
    .grid-5 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-5 .grid-item:last-child {
        margin-right: 0
    }
    .grid-5 .grid-item:nth-child(5n) {
        margin-right: 0;
        float: right
    }
    .grid-5 .grid-item:nth-child(5n + 1) {
        clear: left
    }
    .grid-6 .grid-item {
        width: calc(99.99% * 1/6 - (20px - 20px * 1/6))
    }
    .grid-6 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-6 .grid-item:last-child {
        margin-right: 0
    }
    .grid-6 .grid-item:nth-child(6n) {
        margin-right: 0;
        float: right
    }
    .grid-6 .grid-item:nth-child(6n + 1) {
        clear: left
    }
    .grid-7 .grid-item {
        width: calc(99.99% * 1/7 - (20px - 20px * 1/7))
    }
    .grid-7 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-7 .grid-item:last-child {
        margin-right: 0
    }
    .grid-7 .grid-item:nth-child(7n) {
        margin-right: 0;
        float: right
    }
    .grid-7 .grid-item:nth-child(7n + 1) {
        clear: left
    }
    .grid-8 .grid-item {
        width: calc(99.99% * 1/8 - (20px - 20px * 1/8))
    }
    .grid-8 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-8 .grid-item:last-child {
        margin-right: 0
    }
    .grid-8 .grid-item:nth-child(8n) {
        margin-right: 0;
        float: right
    }
    .grid-8 .grid-item:nth-child(8n + 1) {
        clear: left
    }
    /* Offset */
    .grid-5 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/5 - (20px - 20px * 1/5) + 20px)
    }
    .grid-5 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/5 - (20px - 20px * 2/5) + 20px)
    }
    .grid-5 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/5 - (20px - 20px * 3/5) + 20px)
    }
    .grid-5 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/5 - (20px - 20px * 4/5) + 20px)
    }
    .grid-6 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/6 - (20px - 20px * 1/6) + 20px)
    }
    .grid-6 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/6 - (20px - 20px * 2/6) + 20px)
    }
    .grid-6 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/6 - (20px - 20px * 3/6) + 20px)
    }
    .grid-6 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/6 - (20px - 20px * 4/6) + 20px)
    }
    .grid-6 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/6 - (20px - 20px * 5/6) + 20px)
    }
    .grid-7 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/7 - (20px - 20px * 1/7) + 20px)
    }
    .grid-7 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/7 - (20px - 20px * 2/7) + 20px)
    }
    .grid-7 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/7 - (20px - 20px * 3/7) + 20px)
    }
    .grid-7 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/7 - (20px - 20px * 4/7) + 20px)
    }
    .grid-7 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/7 - (20px - 20px * 5/7) + 20px)
    }
    .grid-7 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/7 - (20px - 20px * 6/7) + 20px)
    }
    .grid-8 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/8 - (20px - 20px * 1/8) + 20px)
    }
    .grid-8 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/8 - (20px - 20px * 2/8) + 20px)
    }
    .grid-8 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/8 - (20px - 20px * 3/8) + 20px)
    }
    .grid-8 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/8 - (20px - 20px * 4/8) + 20px)
    }
    .grid-8 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/8 - (20px - 20px * 5/8) + 20px)
    }
    .grid-8 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/8 - (20px - 20px * 6/8) + 20px)
    }
    .grid-8 .grid-item.offset-7 {
        position: relative;
        left: calc(99.99% * 7/8 - (20px - 20px * 7/8) + 20px)
    }
}
@media (min-width: 1200px) {
    /* Basic */
    .grid-9 .grid-item {
        width: calc(99.99% * 1/9 - (20px - 20px * 1/9))
    }
    .grid-9 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-9 .grid-item:last-child {
        margin-right: 0
    }
    .grid-9 .grid-item:nth-child(9n) {
        margin-right: 0;
        float: right
    }
    .grid-9 .grid-item:nth-child(9n + 1) {
        clear: left
    }
    .grid-10 .grid-item {
        width: calc(99.99% * 1/10 - (20px - 20px * 1/10))
    }
    .grid-10 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-10 .grid-item:last-child {
        margin-right: 0
    }
    .grid-10 .grid-item:nth-child(10n) {
        margin-right: 0;
        float: right
    }
    .grid-10 .grid-item:nth-child(10n + 1) {
        clear: left
    }
    .grid-11 .grid-item {
        width: calc(99.99% * 1/11 - (20px - 20px * 1/11))
    }
    .grid-11 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-11 .grid-item:last-child {
        margin-right: 0
    }
    .grid-11 .grid-item:nth-child(11n) {
        margin-right: 0;
        float: right
    }
    .grid-11 .grid-item:nth-child(11n + 1) {
        clear: left
    }
    .grid-12 .grid-item {
        width: calc(99.99% * 1/12 - (20px - 20px * 1/12))
    }
    .grid-12 .grid-item:nth-child(1n) {
        float: left;
        margin-right: 20px;
        clear: none
    }
    .grid-12 .grid-item:last-child {
        margin-right: 0
    }
    .grid-12 .grid-item:nth-child(12n) {
        margin-right: 0;
        float: right
    }
    .grid-12 .grid-item:nth-child(12n + 1) {
        clear: left
    }
    /* Offset */
    .grid-9 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/9 - (20px - 20px * 1/9) + 20px)
    }
    .grid-9 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/9 - (20px - 20px * 2/9) + 20px)
    }
    .grid-9 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/9 - (20px - 20px * 3/9) + 20px)
    }
    .grid-9 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/9 - (20px - 20px * 4/9) + 20px)
    }
    .grid-9 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/9 - (20px - 20px * 5/9) + 20px)
    }
    .grid-9 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/9 - (20px - 20px * 6/9) + 20px)
    }
    .grid-9 .grid-item.offset-7 {
        position: relative;
        left: calc(99.99% * 7/9 - (20px - 20px * 7/9) + 20px)
    }
    .grid-9 .grid-item.offset-8 {
        position: relative;
        left: calc(99.99% * 8/9 - (20px - 20px * 8/9) + 20px)
    }
    .grid-10 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/10 - (20px - 20px * 1/10) + 20px)
    }
    .grid-10 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/10 - (20px - 20px * 2/10) + 20px)
    }
    .grid-10 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/10 - (20px - 20px * 3/10) + 20px)
    }
    .grid-10 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/10 - (20px - 20px * 4/10) + 20px)
    }
    .grid-10 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/10 - (20px - 20px * 5/10) + 20px)
    }
    .grid-10 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/10 - (20px - 20px * 6/10) + 20px)
    }
    .grid-10 .grid-item.offset-7 {
        position: relative;
        left: calc(99.99% * 7/10 - (20px - 20px * 7/10) + 20px)
    }
    .grid-10 .grid-item.offset-8 {
        position: relative;
        left: calc(99.99% * 8/10 - (20px - 20px * 8/10) + 20px)
    }
    .grid-10 .grid-item.offset-9 {
        position: relative;
        left: calc(99.99% * 9/10 - (20px - 20px * 9/10) + 20px)
    }
    .grid-11 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/11 - (20px - 20px * 1/11) + 20px)
    }
    .grid-11 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/11 - (20px - 20px * 2/11) + 20px)
    }
    .grid-11 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/11 - (20px - 20px * 3/11) + 20px)
    }
    .grid-11 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/11 - (20px - 20px * 4/11) + 20px)
    }
    .grid-11 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/11 - (20px - 20px * 5/11) + 20px)
    }
    .grid-11 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/11 - (20px - 20px * 6/11) + 20px)
    }
    .grid-11 .grid-item.offset-7 {
        position: relative;
        left: calc(99.99% * 7/11 - (20px - 20px * 7/11) + 20px)
    }
    .grid-11 .grid-item.offset-8 {
        position: relative;
        left: calc(99.99% * 8/11 - (20px - 20px * 8/11) + 20px)
    }
    .grid-11 .grid-item.offset-9 {
        position: relative;
        left: calc(99.99% * 9/11 - (20px - 20px * 9/11) + 20px)
    }
    .grid-11 .grid-item.offset-10 {
        position: relative;
        left: calc(99.99% * 10/11 - (20px - 20px * 10/11) + 20px)
    }
    .grid-12 .grid-item.offset-1 {
        position: relative;
        left: calc(99.99% * 1/12 - (20px - 20px * 1/12) + 20px)
    }
    .grid-12 .grid-item.offset-2 {
        position: relative;
        left: calc(99.99% * 2/12 - (20px - 20px * 2/12) + 20px)
    }
    .grid-12 .grid-item.offset-3 {
        position: relative;
        left: calc(99.99% * 3/12 - (20px - 20px * 3/12) + 20px)
    }
    .grid-12 .grid-item.offset-4 {
        position: relative;
        left: calc(99.99% * 4/12 - (20px - 20px * 4/12) + 20px)
    }
    .grid-12 .grid-item.offset-5 {
        position: relative;
        left: calc(99.99% * 5/12 - (20px - 20px * 5/12) + 20px)
    }
    .grid-12 .grid-item.offset-6 {
        position: relative;
        left: calc(99.99% * 6/12 - (20px - 20px * 6/12) + 20px)
    }
    .grid-12 .grid-item.offset-7 {
        position: relative;
        left: calc(99.99% * 7/12 - (20px - 20px * 7/12) + 20px)
    }
    .grid-12 .grid-item.offset-8 {
        position: relative;
        left: calc(99.99% * 8/12 - (20px - 20px * 8/12) + 20px)
    }
    .grid-12 .grid-item.offset-9 {
        position: relative;
        left: calc(99.99% * 9/12 - (20px - 20px * 9/12) + 20px)
    }
    .grid-12 .grid-item.offset-10 {
        position: relative;
        left: calc(99.99% * 10/12 - (20px - 20px * 10/12) + 20px)
    }
    .grid-12 .grid-item.offset-11 {
        position: relative;
        left: calc(99.99% * 11/12 - (20px - 20px * 11/12) + 20px)
    }
}
.container {
    *zoom: 1;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-right: 20px;
    padding-left: 20px
}
.container:before {
    content: '';
    display: table
}
.container:after {
    content: '';
    display: table;
    clear: both
}
@media (min-width: 544px) {
    .container {
        *zoom: 1;
        max-width: 544px;
        margin-left: auto;
        margin-right: auto
    }
    .container:before {
        content: '';
        display: table
    }
    .container:after {
        content: '';
        display: table;
        clear: both
    }
}
@media (min-width: 768px) {
    .container {
        *zoom: 1;
        max-width: 768px;
        margin-left: auto;
        margin-right: auto
    }
    .container:before {
        content: '';
        display: table
    }
    .container:after {
        content: '';
        display: table;
        clear: both
    }
}
@media (min-width: 992px) {
    .container {
        *zoom: 1;
        max-width: 992px;
        margin-left: auto;
        margin-right: auto
    }
    .container:before {
        content: '';
        display: table
    }
    .container:after {
        content: '';
        display: table;
        clear: both
    }
}
@media (min-width: 1200px) {
    .container {
        *zoom: 1;
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto
    }
    .container:before {
        content: '';
        display: table
    }
    .container:after {
        content: '';
        display: table;
        clear: both
    }
}
.header-home {
    background-color: #bdbdbd
}
.main-home img {
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    max-width: 100%;
    margin: 15px 0
}
@media(min-width: 544px) {
    .main-home {
        padding-bottom: 70px
        /* Footer Height */
    }
}
.footer-home {
    width: 100%;
    box-sizing: border-box;
    background-color: #bdbdbd;
    padding: 25px 0;
    text-align: center;
    color: #616161
}
@media (min-width: 544px) {
    .footer-home {
        position: absolute;
        left: 0;
        bottom: 0;
        height: 70px
    }
}
.wrapper {
    position: relative;
    min-height: 100%
}
.header-home h1,
.header-home h2,
.header-home h3,
.header-home h4,
.header-home h5,
.header-home h6 {
    color: #ececec;
    text-align: center
}
@media(max-width: 543px) {
    .header-home {
        background-image: linear-gradient(to right, rgba(33, 150, 243, 1) 25%, rgba(244, 67, 54, 1) 25%, rgba(244, 67, 54, 1) 50%, rgba(255, 193, 7, 1) 50%, rgba(255, 193, 7, 1) 75%, rgba(76, 175, 80, 1) 75%, rgba(76, 175, 80, 1) 100%)
    }
    .header-home h1,
.header-home h2,
.header-home h3,
.header-home h4,
.header-home h5,
.header-home h6 {
        text-shadow: 0 0 10px rgba(0,0,0,.8)
    }
}
@media(min-width: 544px) {
    .header-home h1,
.header-home h2,
.header-home h3,
.header-home h4,
.header-home h5,
.header-home h6 {
        text-shadow: 0 5px rgba(33, 150, 243, 1), 
    0 10px rgba(244, 67, 54, 1), 
    0 15px rgba(255, 193, 7, 1), 
    0 20px rgba(76, 175, 80, 1);
        font-size: 4em;
        margin-bottom: 50px
    }
}
/*# sourceMappingURL=map/style.css.map */
